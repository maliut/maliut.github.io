{"componentChunkName":"component---src-templates-post-js","path":"/p/java-use-gson/","result":{"data":{"markdownRemark":{"id":"ec4ad01f-fd36-5806-958e-cb86a0fbd051","excerpt":"Lab8 需要操作 JSON 格式。毕竟用处广泛，而 Java 中有许多包可以用于操作 JSON （参见：http://www.json.org/） 起初使用 org.json ，但是将对象保存为 JSON 时似乎需要将对象的每个属性都手工写入，而我的设想是自动探测对象的所有属性并写为 JSON…","html":"<p>Lab8 需要操作 JSON 格式。毕竟用处广泛，而 Java 中有许多包可以用于操作 JSON （参见：<a href=\"http://www.json.org/\">http://www.json.org/</a>）</p>\n<p>起初使用 org.json ，但是将对象保存为 JSON 时似乎需要将对象的每个属性都手工写入，而我的设想是自动探测对象的所有属性并写为 JSON （毕竟重复劳动）。遍寻网络无果，后来在某个角落发现 Gson 似乎可以实现。遂用之，发现功能强大。</p>\n<!--more-->\n<h1>生成 JSON</h1>\n<p>需要生成 JSON 的数据类：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> deposit<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deposit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>deposit <span class=\"token operator\">=</span> deposit<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>用于生成的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>gson<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Gson</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Player</span> players <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    players<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Gson</span> gson <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// create Gson object</span>\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>players<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>注：生成 Gson 对象除了用 <code class=\"language-text\">new Gson()</code> 外还有一种据说更高端的方法，反正我也不知道用处和区别就不写了</p>\n<p><code class=\"language-text\">toJson</code> 方法后的参数可以为对象，也可以为对象数组。都可以生成符合规范的 JSON 格式</p>\n<h1>读取 JSON</h1>\n<p>以从 OpenWeatherMap 的 API 返回的 JSON 为例（查询天气：<a href=\"http://api.openweathermap.org/data/2.5/weather?q=London\">http://api.openweathermap.org/data/2.5/weather?q=London</a>，各参数可参考 <a href=\"http://openweathermap.org/weather-data#current\">http://openweathermap.org/weather-data#current</a>）</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">88319</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"dt\"</span><span class=\"token operator\">:</span><span class=\"token number\">1345284000</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Benghazi\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"coord\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"lat\"</span><span class=\"token operator\">:</span><span class=\"token number\">32.12</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"lon\"</span><span class=\"token operator\">:</span><span class=\"token number\">20.07</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"temp\"</span><span class=\"token operator\">:</span><span class=\"token number\">306.15</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"pressure\"</span><span class=\"token operator\">:</span><span class=\"token number\">1013</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"humidity\"</span><span class=\"token operator\">:</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"temp_min\"</span><span class=\"token operator\">:</span><span class=\"token number\">306</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"temp_max\"</span><span class=\"token operator\">:</span><span class=\"token number\">306</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"wind\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"speed\"</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"deg\"</span><span class=\"token operator\">:</span><span class=\"token number\">-7</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"weather\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n                 <span class=\"token punctuation\">{</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">520</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"rain\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"light intensity shower rain\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"09d\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">{</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"rain\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"light rain\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"10d\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">{</span><span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span><span class=\"token number\">701</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"mist\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"mist\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"50d\"</span><span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"clouds\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"all\"</span><span class=\"token operator\">:</span><span class=\"token number\">90</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rain\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token property\">\"3h\"</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>这是一个复杂的 JSON 数据，为了读取需要先根据数据生成特定的类结构。结构如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WeatherState</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Main</span> main<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Weather</span><span class=\"token punctuation\">></span></span> weather<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> temp<span class=\"token punctuation\">,</span> temp_min<span class=\"token punctuation\">,</span> temp_max<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Weather</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>注：</p>\n<ol>\n<li>类名随意</li>\n<li>变量名需要严格符合 JSON 中的内容</li>\n<li>内部类需要 static ，这里使用内部类看起来更加清晰，用继承也可以</li>\n<li>变量 private + get/set 方法应该也可以，图方便用 public</li>\n<li>不需要把 JSON 中所有的数据都建构出来，你建了多少就会读出来多少（这一点非常好啊）</li>\n</ol>\n<p>用于读取的代码</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token class-name\">String</span> jsonWeather <span class=\"token operator\">=</span> <span class=\"token comment\">/* 前面的 Json 数据 */</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Gson</span> gson <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// create gson object</span>\n<span class=\"token class-name\">WeatherState</span> w <span class=\"token operator\">=</span> gson<span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>jsonWeather<span class=\"token punctuation\">,</span> <span class=\"token class-name\">WeatherState</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>以上即为 Gson 的基本用法</p>","frontmatter":{"title":"Java 使用 Gson 操作 JSON 数据","date":"2014/12/12","tags":["Java","JSON","Gson"],"prompt":null},"fields":{"slug":"/java-use-gson/","encrypted":null}}},"pageContext":{"id":"ec4ad01f-fd36-5806-958e-cb86a0fbd051"}},"staticQueryHashes":["1633816651","3000541721","3000541721"]}